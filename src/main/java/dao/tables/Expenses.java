/**
 * This class is generated by jOOQ
 */
package dao.tables;


import dao.Keys;
import dao.Public;
import dao.tables.records.ExpensesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Expenses extends TableImpl<ExpensesRecord> {

    private static final long serialVersionUID = -658137257;

    /**
     * The reference instance of <code>public.expenses</code>
     */
    public static final Expenses EXPENSES = new Expenses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExpensesRecord> getRecordType() {
        return ExpensesRecord.class;
    }

    /**
     * The column <code>public.expenses.id</code>.
     */
    public final TableField<ExpensesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('expenses_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.expenses.description</code>.
     */
    public final TableField<ExpensesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>public.expenses.cost</code>.
     */
    public final TableField<ExpensesRecord, Float> COST = createField("cost", org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * The column <code>public.expenses.employee_id</code>.
     */
    public final TableField<ExpensesRecord, Integer> EMPLOYEE_ID = createField("employee_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.expenses</code> table reference
     */
    public Expenses() {
        this("expenses", null);
    }

    /**
     * Create an aliased <code>public.expenses</code> table reference
     */
    public Expenses(String alias) {
        this(alias, EXPENSES);
    }

    private Expenses(String alias, Table<ExpensesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Expenses(String alias, Table<ExpensesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ExpensesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EXPENSES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExpensesRecord> getPrimaryKey() {
        return Keys.EXPENSES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExpensesRecord>> getKeys() {
        return Arrays.<UniqueKey<ExpensesRecord>>asList(Keys.EXPENSES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ExpensesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ExpensesRecord, ?>>asList(Keys.EXPENSES__EXPENSES_EMPLOYEE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Expenses as(String alias) {
        return new Expenses(alias, this);
    }

    /**
     * Rename this table
     */
    public Expenses rename(String name) {
        return new Expenses(name, null);
    }
}
