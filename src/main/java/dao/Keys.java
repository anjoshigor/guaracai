/**
 * This class is generated by jOOQ
 */
package dao;


import dao.tables.Category;
import dao.tables.Client;
import dao.tables.Employee;
import dao.tables.Expenses;
import dao.tables.Goods;
import dao.tables.Sale;
import dao.tables.records.CategoryRecord;
import dao.tables.records.ClientRecord;
import dao.tables.records.EmployeeRecord;
import dao.tables.records.ExpensesRecord;
import dao.tables.records.GoodsRecord;
import dao.tables.records.SaleRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<ClientRecord, Integer> IDENTITY_CLIENT = Identities0.IDENTITY_CLIENT;
    public static final Identity<EmployeeRecord, Integer> IDENTITY_EMPLOYEE = Identities0.IDENTITY_EMPLOYEE;
    public static final Identity<ExpensesRecord, Integer> IDENTITY_EXPENSES = Identities0.IDENTITY_EXPENSES;
    public static final Identity<GoodsRecord, Integer> IDENTITY_GOODS = Identities0.IDENTITY_GOODS;
    public static final Identity<SaleRecord, Integer> IDENTITY_SALE = Identities0.IDENTITY_SALE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
    public static final UniqueKey<ClientRecord> CLIENT_PKEY = UniqueKeys0.CLIENT_PKEY;
    public static final UniqueKey<EmployeeRecord> EMPLOYEE_PKEY = UniqueKeys0.EMPLOYEE_PKEY;
    public static final UniqueKey<ExpensesRecord> EXPENSES_PKEY = UniqueKeys0.EXPENSES_PKEY;
    public static final UniqueKey<GoodsRecord> GOODS_PKEY = UniqueKeys0.GOODS_PKEY;
    public static final UniqueKey<SaleRecord> SALE_PKEY = UniqueKeys0.SALE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ExpensesRecord, EmployeeRecord> EXPENSES__EXPENSES_EMPLOYEE_ID_FKEY = ForeignKeys0.EXPENSES__EXPENSES_EMPLOYEE_ID_FKEY;
    public static final ForeignKey<GoodsRecord, CategoryRecord> GOODS__GOODS_CATEGORY_ID_FKEY = ForeignKeys0.GOODS__GOODS_CATEGORY_ID_FKEY;
    public static final ForeignKey<SaleRecord, EmployeeRecord> SALE__SALE_EMPLOYEE_ID_FKEY = ForeignKeys0.SALE__SALE_EMPLOYEE_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = createIdentity(Category.CATEGORY, Category.CATEGORY.ID);
        public static Identity<ClientRecord, Integer> IDENTITY_CLIENT = createIdentity(Client.CLIENT, Client.CLIENT.ID);
        public static Identity<EmployeeRecord, Integer> IDENTITY_EMPLOYEE = createIdentity(Employee.EMPLOYEE, Employee.EMPLOYEE.ID);
        public static Identity<ExpensesRecord, Integer> IDENTITY_EXPENSES = createIdentity(Expenses.EXPENSES, Expenses.EXPENSES.ID);
        public static Identity<GoodsRecord, Integer> IDENTITY_GOODS = createIdentity(Goods.GOODS, Goods.GOODS.ID);
        public static Identity<SaleRecord, Integer> IDENTITY_SALE = createIdentity(Sale.SALE, Sale.SALE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = createUniqueKey(Category.CATEGORY, "category_pkey", Category.CATEGORY.ID);
        public static final UniqueKey<ClientRecord> CLIENT_PKEY = createUniqueKey(Client.CLIENT, "client_pkey", Client.CLIENT.ID);
        public static final UniqueKey<EmployeeRecord> EMPLOYEE_PKEY = createUniqueKey(Employee.EMPLOYEE, "employee_pkey", Employee.EMPLOYEE.ID);
        public static final UniqueKey<ExpensesRecord> EXPENSES_PKEY = createUniqueKey(Expenses.EXPENSES, "expenses_pkey", Expenses.EXPENSES.ID);
        public static final UniqueKey<GoodsRecord> GOODS_PKEY = createUniqueKey(Goods.GOODS, "goods_pkey", Goods.GOODS.ID);
        public static final UniqueKey<SaleRecord> SALE_PKEY = createUniqueKey(Sale.SALE, "sale_pkey", Sale.SALE.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<ExpensesRecord, EmployeeRecord> EXPENSES__EXPENSES_EMPLOYEE_ID_FKEY = createForeignKey(dao.Keys.EMPLOYEE_PKEY, Expenses.EXPENSES, "expenses__expenses_employee_id_fkey", Expenses.EXPENSES.EMPLOYEE_ID);
        public static final ForeignKey<GoodsRecord, CategoryRecord> GOODS__GOODS_CATEGORY_ID_FKEY = createForeignKey(dao.Keys.CATEGORY_PKEY, Goods.GOODS, "goods__goods_category_id_fkey", Goods.GOODS.CATEGORY_ID);
        public static final ForeignKey<SaleRecord, EmployeeRecord> SALE__SALE_EMPLOYEE_ID_FKEY = createForeignKey(dao.Keys.EMPLOYEE_PKEY, Sale.SALE, "sale__sale_employee_id_fkey", Sale.SALE.EMPLOYEE_ID);
    }
}
