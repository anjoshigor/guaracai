/**
 * This class is generated by jOOQ
 */
package service.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import service.Keys;
import service.Public;
import service.tables.records.TbClientRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbClient extends TableImpl<TbClientRecord> {

    private static final long serialVersionUID = -523637570;

    /**
     * The reference instance of <code>public.tb_client</code>
     */
    public static final TbClient TB_CLIENT = new TbClient();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbClientRecord> getRecordType() {
        return TbClientRecord.class;
    }

    /**
     * The column <code>public.tb_client.id</code>.
     */
    public final TableField<TbClientRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('client_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.tb_client.name</code>.
     */
    public final TableField<TbClientRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(70).nullable(false), this, "");

    /**
     * The column <code>public.tb_client.date_of_birth</code>.
     */
    public final TableField<TbClientRecord, String> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.CHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>public.tb_client.phone</code>.
     */
    public final TableField<TbClientRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR.length(13), this, "");

    /**
     * The column <code>public.tb_client.amount_spent</code>.
     */
    public final TableField<TbClientRecord, Double> AMOUNT_SPENT = createField("amount_spent", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.tb_client.balance</code>.
     */
    public final TableField<TbClientRecord, Double> BALANCE = createField("balance", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.tb_client.email</code>.
     */
    public final TableField<TbClientRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(60), this, "");

    /**
     * Create a <code>public.tb_client</code> table reference
     */
    public TbClient() {
        this("tb_client", null);
    }

    /**
     * Create an aliased <code>public.tb_client</code> table reference
     */
    public TbClient(String alias) {
        this(alias, TB_CLIENT);
    }

    private TbClient(String alias, Table<TbClientRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbClient(String alias, Table<TbClientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TbClientRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TB_CLIENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbClientRecord> getPrimaryKey() {
        return Keys.CLIENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbClientRecord>> getKeys() {
        return Arrays.<UniqueKey<TbClientRecord>>asList(Keys.CLIENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbClient as(String alias) {
        return new TbClient(alias, this);
    }

    /**
     * Rename this table
     */
    public TbClient rename(String name) {
        return new TbClient(name, null);
    }
}
